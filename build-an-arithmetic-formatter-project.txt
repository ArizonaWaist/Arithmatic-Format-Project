def arithmetic_arranger(problems, show_answers=False):
    # Check for too many problems
    if len(problems) > 5:
        return "Error: Too many problems."
    
    top_row = []
    bottom_row = []
    dashes = []
    answers = []
    
    for problem in problems:
        # Split each problem into parts
        parts = problem.split()
        if len(parts) != 3:
            return "Error: Each problem must be two operands and one operator."
        
        left_operand, operator, right_operand = parts
        
        # Check operator validity
        if operator not in ('+', '-'):
            return "Error: Operator must be '+' or '-'."
        
        # Check if both operands are digits
        if not (left_operand.isdigit() and right_operand.isdigit()):
            return "Error: Numbers must only contain digits."
        
        # Check for digit limits
        if len(left_operand) > 4 or len(right_operand) > 4:
            return "Error: Numbers cannot be more than four digits."
        
        # Calculate the result
        if operator == '+':
            answer = str(int(left_operand) + int(right_operand))
        else:  # operator must be '-'
            answer = str(int(left_operand) - int(right_operand))
        
        # Determine width for formatting
        width = max(len(left_operand), len(right_operand)) + 2  # +2 for operator and space
        
        # Format each line
        top_row.append(left_operand.rjust(width))
        bottom_row.append(operator + ' ' + right_operand.rjust(width - 2))  # -2 for operator and space
        dashes.append('-' * width)
        answers.append(answer.rjust(width))
    
    # Combine rows with 4 spaces
    arranged_problems = '    '.join(top_row) + '\n' + \
                        '    '.join(bottom_row) + '\n' + \
                        '    '.join(dashes)
    
    if show_answers:
        arranged_problems += '\n' + '    '.join(answers)
    
    return arranged_problems
